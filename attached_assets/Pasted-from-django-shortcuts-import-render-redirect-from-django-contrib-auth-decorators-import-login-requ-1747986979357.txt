from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from .ewe_functions import recharge_mobile, create_order_id
from .models import Member, RechargeTransaction, CompanyWallet
from decimal import Decimal

@login_required
def initiate_recharge(request):
    if request.method == "POST":
        mobile_no = request.POST.get("mobile_no")
        amount = request.POST.get("amount")
        amount = Decimal(request.POST.get("amount"))
        company_name = request.POST.get("company_name")
        is_stv = request.POST.get("is_stv", "false").lower() == "true"

        member=Member.objects.filter(user=request.user).first()
        if amount > member.wallet_balance:
            redirect('mobile-recharge')
        else:

            order_id = create_order_id(10)
            while RechargeTransaction.objects.filter(order_id=order_id).exists():
                order_id = create_order_id(10)

            response = recharge_mobile(mobile_no, amount, company_name, order_id, is_stv)
            print(response)

            if response.get("status") == 'success':
                member.wallet_balance -= amount
                member.save(update_fields=['wallet_balance'])

                company_wallet, _ = CompanyWallet.objects.get_or_create(id=1)
                calculate_sharable_amout = amount * 4 / 100  # calculate 4% of amount
                company_wallet.balance -= calculate_sharable_amout 
                company_wallet.save()
                member.wallet_balance += calculate_sharable_amout * 50 / 100
                member.resale_income += calculate_sharable_amout * 50 / 100
                shareble_amount = calculate_sharable_amout * 50 / 100
                member.save(update_fields=['wallet_balance', 'resale_income'])

            transaction = RechargeTransaction.objects.create(
                user=request.user,
                mobile_no=mobile_no,
                amount=amount,
                company_name=company_name,
                order_id=order_id,
                status=response.get("status", "Failed"),
                response_data=response
            )

            return render(request, "service/mobile_recharge/recharge_result.html", {"response": response, "transaction": transaction})

    history = RechargeTransaction.objects.filter(user=request.user).order_by("-recharge_date")
    return render(request, "service/mobile_recharge/recharge_form.html", {"history": history})

def dth_recharge(request):
    return render(request, 'service/dth_recharge.html')

def bill_payments(request):
    return render(request, 'service/bill_payments.html')

def electricity_bill(request):
    return render(request, 'service/electricity_bill.html')

def gas_bill(request):
    return render(request, 'service/gas_bill.html')

def mobile_data_packs(request):
    return render(request, 'service/mobile_data_packs.html')

def insurance(request):
    return render(request, 'service/insurance.html')

def loan_payments(request):
    return render(request, 'service/loan_payments.html')

def fastag_recharge(request):
    return render(request, 'service/fastag_recharge.html')
